{
  "hash": "619f44d89afa1121169dd28cf07347f7",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"R Markdown Notes\"\nauthor: \"Zane and Amy\"\ndate: \"2024-07-13\"\noutput:\n  html_document:\n    fig_caption: true\n    number_sections: false\nbibliography: example-bib.bib\n---\n\n\n\n\n\n# This is an example R Markdown document\n\n* The top part of this document (between the `---`) is called the **YAML\nheader**. You specify options here that change the configuration of the document.\n* Text in the R Markdown **body** is formatted in the Pandoc Markdown language.\nMost of the syntax can be found on the cheat sheets in the references section.\n* To include a bibliography in your document, add the `bibliography` option to\nyour YAML header and include a BIBTEX file. A bibtex file looks like this:\n\n\n\n\n```{.bibtex}\n@Book{rmarkdown-cookbook,\n  title = {R Markdown Cookbook},\n  author = {Yihui Xie and Christophe Dervieux and Emily Riederer},\n  publisher = {Chapman and Hall/CRC},\n  address = {Boca Raton, Florida},\n  year = {2020},\n  isbn = {9780367563837},\n  url = {https://bookdown.org/yihui/rmarkdown-cookbook},\n}\n\n@Manual{rmarkdown-package,\n  title = {rmarkdown: Dynamic Documents for R},\n  author = {JJ Allaire and Yihui Xie and Christophe Dervieux and Jonathan McPherson and Javier Luraschi and Kevin Ushey and Aron Atkins and Hadley Wickham and Joe Cheng and Winston Chang and Richard Iannone},\n  year = {2024},\n  note = {R package version 2.27},\n  url = {https://github.com/rstudio/rmarkdown},\n}\n```\n\n\n\n* You can then add citations from your bibliography by adding special text in\nyour R Markdown document: `@rmarkdown-cookbook`. That's how we can get this\ncitation here [@rmarkdown-cookbook].\n\n# Including R code in your Markdown document\n\nYou have to put all of your code in a \"Code chunk\" and tell `knitr` that you\nare using R code.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeas <- readRDS(here::here(\"data\", \"measles_final.Rds\"))\nstr(meas)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t12438 obs. of  7 variables:\n $ iso3c           : chr  \"AFG\" \"AFG\" \"AFG\" \"AFG\" ...\n $ time            : int  1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 ...\n $ country         : chr  \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" \"Afghanistan\" ...\n $ Cases           : int  2792 5166 2900 640 353 2012 1511 638 1154 492 ...\n $ vaccine_antigen : chr  \"MCV1\" \"MCV1\" \"MCV1\" \"MCV1\" ...\n $ vaccine_coverage: int  11 NA 8 9 14 14 14 31 34 22 ...\n $ total_pop       : chr  \"12486631\" \"11155195\" \"10088289\" \"9951449\" ...\n```\n\n\n:::\n:::\n\n\n\nYou can make plots and add captions in Markdown as well.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeas_plot <- subset(meas, country == \"India\" & vaccine_antigen == \"MCV1\")\nplot(\n\tmeas_plot$time, meas_plot$Cases,\n\txlab = \"Year\",\n\tylab = \"Measles cases by year in India\",\n\ttype = \"b\"\n)\n```\n\n::: {.cell-output-display}\n![Meases cases over time in India.](Module11-Rmarkdown-Demo_files/figure-html/indiaplot-1.png){width=672}\n:::\n:::\n\n\n\nNote that if you want to **automatically reference your figures** like you would\nneed to for a research paper, you will also need to use the `bookdown` package,\nand you can read about it [here](https://bookdown.org/yihui/rmarkdown-cookbook/cross-ref.html). For\nthis document, we would have to write out \"Figure 1.\" manually in our text.\n\n# Including tables and figures from files\n\nIncluding tables is a bit more complicated, because unlike `plot()`, R cannot\nproduce any tables on its own. Instead we need to use another package. The\neasiest option is to use the `knitr` package which has a function called\n`knitr::kable()` that can make a table for us, like this.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmeas_table <- data.frame(\n\t\"Median cases\" = median(meas_plot$Cases),\n\t\"IQR cases\" = IQR(meas_plot$Cases)\n)\n\nknitr::kable(\n\tmeas_table,\n\tcaption = \"Median and IQR number of measles cases across all years in India.\"\n)\n```\n\n::: {.cell-output-display}\n\n\nTable: Median and IQR number of measles cases across all years in India.\n\n| Median.cases| IQR.cases|\n|------------:|---------:|\n|        47072|   44015.5|\n\n\n:::\n:::\n\n\n\nYou can also use the `kableExtra` package to format your table more nicely.\nIn general there are a lot of nice table making packages in R, like we saw\nwith the `tinytable` package in the exercise.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntinytable::tt(meas_table)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!DOCTYPE html> \n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>tinytable_2alx60l5mnkbv7h7p4gx</title>\n    <style>\n.table td.tinytable_css_lvvzxyj8tpsoevufmtn8, .table th.tinytable_css_lvvzxyj8tpsoevufmtn8 {    border-bottom: solid 0.1em #d3d8dc; }\n    </style>\n    <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n    <script id=\"MathJax-script\" async src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js\"></script>\n    <script>\n    MathJax = {\n      tex: {\n        inlineMath: [['$', '$'], ['\\\\(', '\\\\)']]\n      },\n      svg: {\n        fontCache: 'global'\n      }\n    };\n    </script>\n  </head>\n\n  <body>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_2alx60l5mnkbv7h7p4gx\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        \n              <tr>\n                <th scope=\"col\">Median.cases</th>\n                <th scope=\"col\">IQR.cases</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>47072</td>\n                  <td>44015.5</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n\n    <script>\n      function styleCell_tinytable_81p6k3fwb85ibd28v4ji(i, j, css_id) {\n        var table = document.getElementById(\"tinytable_2alx60l5mnkbv7h7p4gx\");\n        table.rows[i].cells[j].classList.add(css_id);\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_2alx60l5mnkbv7h7p4gx');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_tinytable_81p6k3fwb85ibd28v4ji(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_2alx60l5mnkbv7h7p4gx\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n\nwindow.addEventListener('load', function () { styleCell_tinytable_81p6k3fwb85ibd28v4ji(0, 0, 'tinytable_css_lvvzxyj8tpsoevufmtn8') })\nwindow.addEventListener('load', function () { styleCell_tinytable_81p6k3fwb85ibd28v4ji(0, 1, 'tinytable_css_lvvzxyj8tpsoevufmtn8') })\n    </script>\n\n  </body>\n\n</html>\n```\n\n:::\n:::\n\n\n\nFinally, if you want to include a figure that you already saved somewhere,\nyou can do that with `knitr` also.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknitr::include_graphics(here::here(\"images\", \"xkcd.png\"))\n```\n\n::: {.cell-output-display}\n![](../images/xkcd.png)\n:::\n:::\n\n\n\n\n# R Markdown resources\n\n* Yihui Xie, the creator of R Markdown, has written three very helpful and FREE\nbooks on R Markdown, which can answer many of your questions.\n    - [The Definitive Guide to R Markdown](https://bookdown.org/yihui/rmarkdown/)\n    - [R Markdown Cookbook](https://bookdown.org/yihui/rmarkdown-cookbook/)\n    - [Bookdown: Authoring books and technical documents with R Markdown](https://bookdown.org/yihui/bookdown/)\n* Before Quarto came around, R Studio created a bunch of great R Markdown resources.\n    - RStudio has created a cheatsheet with the most common commands, that you can get [here](https://www.rstudio.com/wp-content/uploads/2015/02/rmarkdown-cheatsheet.pdf).\n    - There's also a slightly longer [reference guide](https://www.rstudio.com/wp-content/uploads/2015/03/rmarkdown-reference.pdf?_ga=2.135548086.688985490.1593521771-610318113.1566927154).\n    - RStudio also has a [series of online lessons](https://rmarkdown.rstudio.com/lesson-1.html) about R Markdown.\n* To learn more about making and presenting tables in R and R Markdown, you\ncan check out [this free online course material](https://andreashandel.github.io/MADAcourse/content/module-data-presentation/presenting-results-overview.html).\n* And if you still don't quite get that R Project and `here` package stuff,\n[here](http://jenrichmond.rbind.io/post/how-to-use-the-here-package/) and\n[here](https://www.tidyverse.org/blog/2017/12/workflow-vs-script/) are some good readings to help.\n    \n# References\n\n<!-- This is a comment which will not get printed in the final document. I just\nwanted to let you know that the references will get printed at the end of the\ndocument if you include any citations, so remember to add a header! -->\n\n<!-- see how easy it is to write comments? -->\n",
    "supporting": [
      "Module11-Rmarkdown-Demo_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}