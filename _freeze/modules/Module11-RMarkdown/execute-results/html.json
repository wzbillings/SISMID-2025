{
  "hash": "f0e1a70494222d96692b28e0509006d1",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Module 11: Literate Programming\"\nformat:\n  revealjs:\n    toc: false\n---\n\n\n\n\n\n\n\n## Learning goals\n\n1. Define literate programming\n1. Implement literate programming in `R` using `knitr` and either `R Markdown`\nor `Quarto`\n1. Include plots, tables, and references along with your code in a written\nreport.\n1. Locate additional resources for literate programming with `R Markdown` or\n`Quarto`.\n\n## What is literate programming?\n\n* Programming files contain **code** along with **text**, **code results**,\nand other supporting information.\n* Instead of having separate code and text, that you glue together in Word,\nwe have one document which combines code and text.\n\n## What is literate programming?\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![R markdown example, from https://rmarkdown.rstudio.com/authoring_quick_tour.html](../images/rmdexample.png)\n:::\n:::\n\n\n\n\n## Literate programming examples {.smaller}\n\n* Writing a research paper with R Markdown: [https://github.com/wzbillings/Patient-vs-Clinician-Symptom-Reports](https://github.com/wzbillings/Patient-vs-Clinician-Symptom-Reports)\n* Writing a book with R Markdown: [https://github.com/moderndive/ModernDive_book](https://github.com/moderndive/ModernDive_book)\n* Personal websites (like my tutorial!): [https://jadeyryan.com/blog/2024-02-19_beginner-quarto-netlify/](https://jadeyryan.com/blog/2024-02-19_beginner-quarto-netlify/)\n* Other examples: [https://bookdown.org/yihui/rmarkdown/basics-examples.html](https://bookdown.org/yihui/rmarkdown/basics-examples.html)\n\n## `R Markdown` and `Quarto` {.smaller}\n\n* `R Markdown` and `Quarto` are both implementations of literate programming\nusing R, with the `knitr` package for the backend. Both are supported by RStudio.\n* To use `R Markdown`, you need to `install.packages(\"rmarkdown\")`.\n* `Quarto` comes with new versions of RStudio, but you can also install the\nlatest version from the [Quarto website](https://quarto.org/docs/get-started/).\n* `R Markdown` is older and now very commonly used. `Quarto` is newer and so\nhas many fancy new features, but more bugs that are constantly being found and\nfixed.\n* In this class, we will use **R Markdown**. But if you decide to use quarto,\n90% of your knowledge will transfer since they are very similar.\n    - Advantages of R Markdown: more online resources, most common bugs have\n    been fixed over the years, many people are familiar with it.\n    - Advantages of Quarto: supports other programming languages like Python\n    and Julia, uses more modern syntax, less slapped together overall.\n\n# Getting started with R Markdown\n\n## A few sticking points {.smaller .incremental}\n\n* Knitting to `html` format is really easy, but most scientist don't like\nhtml format for some reason. If you want to knit to `pdf`, you should install\nthe package `tinytex` and read the [intro](https://bookdown.org/yihui/rmarkdown-cookbook/install-latex.html).\n* If you want to knit to `word` (what many journals in epidemiology require),\nyou need to have Word installed on your computer. **Note that with word,\nyou are a bit more restricted in your formatting options, so if weird things\nhappen you'll have to try some other options.**\n* You maybe noticed in the tutorial that I used the `here::here()` function\nfor all of my file paths. This is because **R Markdown and Quarto files use\na different working directory from the R Project.** Using `here::here()`\ntranslates relative paths into absolute paths based on your R Project, so it\nmakes sure your R Markdown files can always find the right path!\n\n# Research paper example in R Markdown\n\n## You try it! {.smaller}\n\n1. Create an R Markdown document. Write about either the measles or diphtheria\nexample data sets, and include a figure and a table.\n2. BONUS EXERCISE: read the intro of the `bookdown` book, and create a\n`bookdown` document. Modify your writeup to have a few references with a\nbibliography, and cross-references with your figures and tables.\n3. BONUS: Try to structure your document like a report, with a section stating\nthe questions you want to answer (intro), a section with your R code and\nresults, and a section with your interpretations (discussion). This is a very\nopen ended exercise but by now I believe you can do it, and you'll have a nice\ndocument you can put on your portfolio or show employers!\n",
    "supporting": [
      "Module11-RMarkdown_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}